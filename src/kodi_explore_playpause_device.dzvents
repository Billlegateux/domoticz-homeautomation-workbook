--[[
-- kodi_explore_playpause_device.dzvents
-- Change the player play mode to PLAY or PAUSE using a selector switch
-- 20200523 rwbl
]]--

-- Define the url for the kodi jsonrpc get request (the parameter '?request=' is added)
local REQUEST_URL = "http://player-ip:8080/jsonrpc"
-- Event unique callback (=eventname in uppercase without underscores
local REQUEST_CALLBACK = "KODIEXPLOREPLAYPAUSE"
-- Command for method to set the player to play, pause
local JSONRPC_PLAY = "{\"jsonrpc\":\"2.0\",\"method\":\"Player.PlayPause\",\"params\":{\"playerid\":0,\"play\":true},\"id\":\"AudioGetItem\"}"
local JSONRPC_PAUSE = "{\"jsonrpc\":\"2.0\",\"method\":\"Player.PlayPause\",\"params\":{\"playerid\":0,\"play\":false},\"id\":\"AudioGetItem\"}"
-- Domoticz device
local IDX_PLAYPAUSE = 119
local LEVEL_PLAY = 10
local LEVEL_PAUSE = 20
-- HINT: instead constants for the jsonrpc command and the device levels, a lua table could be used
local modePlayPause = {
    [10] = "{\"jsonrpc\":\"2.0\",\"method\":\"Player.PlayPause\",\"params\":{\"playerid\":0,\"play\":true},\"id\":\"AudioGetItem\"}",
    [20] = "{\"jsonrpc\":\"2.0\",\"method\":\"Player.PlayPause\",\"params\":{\"playerid\":0,\"play\":false},\"id\":\"AudioGetItem\"}",
    }

return {
	on = { 
	    devices = { IDX_PLAYPAUSE }, 
	    httpResponses = { REQUEST_CALLBACK } 
	    },
	execute = function(domoticz, item)
	    -- check device
	    if (item.isDevice and item.idx == IDX_PLAYPAUSE) then 
            local jsonrpcCommand = ""
            -- set jsonrpc command using constants
            if (item.level == LEVEL_PLAY) then jsonrpcCommand = JSONRPC_PLAY end
            if (item.level == LEVEL_PAUSE) then jsonrpcCommand = JSONRPC_PAUSE end
            domoticz.log(string.format("CONST=Level selected: %d, %s", item.level, jsonrpcCommand))
            -- set jsonrpc command using lua table
            jsonrpcCommand = modePlayPause[item.level]
            domoticz.log(string.format("TABLE=Level selected: %d, %s", item.level, jsonrpcCommand))
	        domoticz.openURL({
                url = REQUEST_URL,
                method = 'POST',
                headers = { ['content-type'] = 'application/json' }, 
                callback = REQUEST_CALLBACK,
                postData = jsonrpcCommand})
            domoticz.log(string.format("POST Request: %s, %s", REQUEST_URL, jsonrpcCommand))
		end 
    
		if (item.isHTTPResponse) then
            domoticz.log(string.format('Callback: %s, Status Code = %s', item.callback, item.statusCode))
		    domoticz.log(string.format('Item data: %s', item.data))
			if (item.statusCode == 200 and item.callback == REQUEST_CALLBACK) then
			    domoticz.log(string.format("[INFO] Handling request: %s", item.statusText))
			else
			    domoticz.log(string.format("[ERROR] Handling request: %s", item.statusText), domoticz.LOG_ERROR)
			end
		end
    end
}
