--[[
-- kodi_explore_playing_timer.dzvents
-- Get the current song playing from the Kodi Media Center and display in a text device
-- Uses a timer and updates every minute - highest update interval possible via timer
-- url get (=readdata) request from the kodi server, to obtain artist & title playing
-- http example:
-- http://player-ip:8080/jsonrpc?request={"jsonrpc":"2.0","method":"Player.GetItem","params":{"properties":["title","album","artist","duration"],"playerid":0},"id":1}
-- http response JSON string:
-- {"id":1,"jsonrpc":"2.0","result":{"item":{"album":"ALBUM","artist":["ARTIST"],"duration":274,"id":227,"label":"LABEL","title":"TITLE","type":"song"}}}
-- Notes:
-- * Method Player.GetItem still responses a title if the song played is paused.
-- * Introspect: detailed information about an API method - example Player.GetItem
-- http://player-ip:8080/jsonrpc?request={ "jsonrpc": "2.0", "method": "JSONRPC.Introspect", "params": { "filter": { "id": "Player.GetItem", "type": "method" } }, "id": 1 }
--
-- 20200523 rwbl
]]--

-- Define the url for the kodi jsonrpc get request (the parameter '?request=' is added)
local REQUEST_URL = "http://player-ip:8080/jsonrpc"
-- Event unique callback
local REQUEST_CALLBACK = "KODIEXPLOREPLAYINGTIMER"
-- Request for method Player.GetItem for artist:title
local JSONRPC_GETITEM = "{\"jsonrpc\":\"2.0\",\"method\":\"Player.GetItem\",\"params\":{\"properties\":[\"title\",\"album\",\"artist\",\"duration\"],\"playerid\":0},\"id\":\"AudioGetItem\"}"
-- Domoticz device - text song playing artist:title
local IDX_PLAYING = 117

return {
	on = { 
	    timer = { 'every minute' }, 
	    devices = { IDX_PLAYING }, 
	    httpResponses = { REQUEST_CALLBACK } 
	    },
    data = { 
        songprevious  = { initial = "" } 
        },
	execute = function(domoticz, item)
	    -- timer every minute
	    if (item.isTimer) then 
            local urlRequest = string.format("%s?request=%s", REQUEST_URL, JSONRPC_GETITEM)
	        domoticz.log(urlRequest)
			domoticz.openURL({url = urlRequest, method = 'GET', callback = REQUEST_CALLBACK})
		end 
    
		if (item.isHTTPResponse) then
            domoticz.log(string.format('Callback: %s, Status Code = %s', item.callback, item.statusCode))
		    domoticz.log(string.format('Item data: %s', item.data))
			if (item.statusCode == 200 and item.callback == REQUEST_CALLBACK) then
				if (item.isJSON) then
				    -- Pick the song artist & title 
				    local song = item.json.result.item
                    -- Check if there is a title
                    local songcurrent = "Nothing playing"
                    if (song.title ~= "") then
                        -- note the artist is the first entry (1) of the artist array
	        			songcurrent = string.format("%s:%s", song.artist[1], song.title)
                    end
                    domoticz.log(string.format("Song playing: %s", songcurrent))
                    -- check if the song has changed
                    if (songcurrent ~= domoticz.data.songprevious) then
                        domoticz.log(string.format("Song playing changed: %s to %s", domoticz.data.songprevious, songcurrent))
    			        -- Update the text device
	    			    domoticz.devices(IDX_PLAYING).updateText(songcurrent)
	    			    -- Update the data
	    			    domoticz.data.songprevious = songcurrent
                    end
		        end
		        return
			else
                domoticz.devices(IDX_PLAYING).updateText(item.statusText)
			    domoticz.log('[ERROR] Handling the request:' .. item.statusText, domoticz.LOG_ERROR)
		        return
			end
		end

    end
}
